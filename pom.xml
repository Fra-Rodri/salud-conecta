<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	
	<!-- Versión del modelo POM -->
	<modelVersion>4.0.0</modelVersion>

	<!-- Hereda configuración base de Spring Boot -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.5.6</version>
		<relativePath /> <!-- Busca el padre en el repositorio -->
	</parent>

	<!-- Datos del proyecto -->
	<groupId>com.fran</groupId>
	<artifactId>salud-conecta</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>SaludConecta</name>
	<description>Gestión clínica</description>

	<!-- Propiedades globales -->
	<properties>
		<java.version>21</java.version> <!-- Versión de Java usada -->
	</properties>

	<!-- Dependencias necesarias -->
	<dependencies>
	
		<!-- Spring Boot Mail para enviar correos -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>
		
		<!-- Apache POI para exportar a Excel -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>5.2.5</version>
		</dependency>

		<!-- Acceso a base de datos con JDBC -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jdbc</artifactId>
		</dependency>

		<!-- Seguridad con Spring Security -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<!-- Motor de plantillas Thymeleaf -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>

		<!-- Web: controladores REST, JSON, etc. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- Integración de Thymeleaf con Spring Security -->
		<dependency>
			<groupId>org.thymeleaf.extras</groupId>
			<artifactId>thymeleaf-extras-springsecurity6</artifactId>
		</dependency>

		<!-- Recarga automática en desarrollo -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>

		<!-- Driver de PostgreSQL -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- Lombok para reducir boilerplate -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- Pruebas unitarias con Spring Boot -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Pruebas de seguridad -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- jOOQ: DSL para SQL -->
		<dependency>
			<groupId>org.jooq</groupId>
			<artifactId>jooq</artifactId>
		</dependency>

		<!-- jOOQ: acceso a metadatos de la base de datos -->
		<dependency>
			<groupId>org.jooq</groupId>
			<artifactId>jooq-meta</artifactId>
		</dependency>

		<!-- jOOQ: generación de código -->
		<dependency>
			<groupId>org.jooq</groupId>
			<artifactId>jooq-codegen</artifactId>
		</dependency>

		<!-- API de validación (anotaciones como @NotBlank, @Size...) jakarta.validation-api: ya está incluida en spring-boot-starter-validation-->
<!--		<dependency>-->
<!--		    <groupId>jakarta.validation</groupId>-->
<!--		    <artifactId>jakarta.validation-api</artifactId>-->
<!--		</dependency>-->

		<!-- Starter para activar validación en Spring Boot -->
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

	</dependencies>

	<!-- Configuración de compilación -->
	<build>
		<plugins>

			<!-- Plugin para compilar con soporte de anotaciones (Lombok) -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>

			<!-- Plugin para empaquetar como aplicación Spring Boot -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<!--lombok en spring-boot-maven-plugin → <excludes>: no es necesario excluirlo a menos que tengas problemas específicos al empaquetar.-->
<!--				<configuration>-->
<!--					<excludes>-->
<!--						<exclude>-->
<!--							<groupId>org.projectlombok</groupId>-->
<!--							<artifactId>lombok</artifactId>-->
<!--						</exclude>-->
<!--					</excludes>-->
<!--				</configuration>-->
			</plugin>

			<!-- Plugin para generar clases jOOQ desde la base de datos -->
			<plugin>
				<groupId>org.jooq</groupId>
				<artifactId>jooq-codegen-maven</artifactId>
				<executions>
					<execution>
						<id>generate-jooq</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<jdbc>
								<!--Esto se usa desde el .m2/settings.xml-->
								<driver>${db.driver}</driver>
								<url>${db.url}</url>
								<user>${db.user}</user>
								<password>${db.password}</password>
							</jdbc>
							<generator>
								<database>
									<name>org.jooq.meta.postgres.PostgresDatabase</name>
									<inputSchema>clinica</inputSchema>
								</database>
								<target>
									<packageName>com.fran.saludconecta.jooq</packageName>
									<directory>target/generated-sources/jooq</directory>
								</target>
							</generator>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>
</project>